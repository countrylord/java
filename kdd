  /*
    Copyright 2023 ZTE Corporation. All rights reserved.
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    */
    
    package v1alpha1
    
    import (
    metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
    )
    
    // EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
  // NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.
    
    // ZPPCDomainDataSourceSpec defines the desired state of ZPPCDomainDataSource
    type ZPPCDomainDataSourceSpec struct {
    // +optional
    URI  string `json:"uri"`
    Name string `json:"name"`
    // +optional
    Data map[string]string `json:"data,omitempty"`
    Type string            `json:"type"`
    // +optional
    InfoKey string `json:"infoKey,omitempty"`
    // +optional
    AccessDirectly bool `json:"accessDirectly,omitempty"`
  }

    // ZPPCDomainDataSourceStatus defines the observed state of ZPPCDomainDataSource
    type ZPPCDomainDataSourceStatus struct {
    // INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
  // Important: Run "make" to regenerate code after modifying this file
  }

    //+kubebuilder:object:root=true
    //+kubebuilder:subresource:status
    //+kubebuilder:resource:shortName=zdds
    
    // ZPPCDomainDataSource is the Schema for the zppcdomaindatasources API
    type ZPPCDomainDataSource struct {
    metav1.TypeMeta   `json:",inline"`
    metav1.ObjectMeta `json:"metadata,omitempty"`
    
    Spec   ZPPCDomainDataSourceSpec `json:"spec,omitempty"`
    Status DataStatus               `json:"status,omitempty"`
  }

    //+kubebuilder:object:root=true
    
    // ZPPCDomainDataSourceList contains a list of ZPPCDomainDataSource
    type ZPPCDomainDataSourceList struct {
    metav1.TypeMeta `json:",inline"`
    metav1.ListMeta `json:"metadata,omitempty"`
    Items           []ZPPCDomainDataSource `json:"items"`
  }

    func init() {
    SchemeBuilder.Register(&ZPPCDomainDataSource{}, &ZPPCDomainDataSourceList{})
  }
